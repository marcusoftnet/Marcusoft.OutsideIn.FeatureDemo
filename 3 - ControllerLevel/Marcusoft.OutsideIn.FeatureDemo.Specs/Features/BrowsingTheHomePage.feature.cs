// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.4.0.0
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace Marcusoft.OutsideIn.FeatureDemo.Specs.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Browsing the home page")]
    public partial class BrowsingTheHomePageFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "BrowsingTheHomePage.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Browsing the home page", "In order to see a list of the features of our application and their status\r\nAs a " +
                    "team member\r\nI want to see a list of the features, sorted on their different sta" +
                    "tus", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Go to homepage of the application")]
        public virtual void GoToHomepageOfTheApplication()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Go to homepage of the application", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Size",
                        "Status",
                        "AssignedTo",
                        "HoursWorked",
                        "Description"});
            table1.AddRow(new string[] {
                        "Login",
                        "S",
                        "NotStarted",
                        "",
                        "0",
                        "In order to be sure that the system knows who I am, As a user, I want to be able " +
                            "to login with my user name and password"});
            table1.AddRow(new string[] {
                        "Logout",
                        "M",
                        "InProgress",
                        "John",
                        "2",
                        "In order to not be signed in forever, As a logged in user, I want to be able to l" +
                            "ogout of the site"});
            table1.AddRow(new string[] {
                        "Print",
                        "L",
                        "Done",
                        "Marcus",
                        "20",
                        "In order to print the items I\'ve purchased, As a user, I want to be able to print" +
                            " my shopping cart"});
#line 7
 testRunner.Given("the following features in the database:", ((string)(null)), table1);
#line 12
 testRunner.When("I navigate to the homepage");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Size",
                        "Status",
                        "AssignedTo",
                        "HoursWorked",
                        "Description"});
            table2.AddRow(new string[] {
                        "Login",
                        "S",
                        "NotStarted",
                        "",
                        "0",
                        "In order to be sure that the system knows who I am, As a user, I want to be able " +
                            "to login with my user name and password"});
            table2.AddRow(new string[] {
                        "Logout",
                        "M",
                        "InProgress",
                        "John",
                        "2",
                        "In order to not be signed in forever, As a logged in user, I want to be able to l" +
                            "ogout of the site"});
            table2.AddRow(new string[] {
                        "Print",
                        "L",
                        "Done",
                        "Marcus",
                        "20",
                        "In order to print the items I\'ve purchased, As a user, I want to be able to print" +
                            " my shopping cart"});
#line 13
 testRunner.Then("I should see a view with the following features:", ((string)(null)), table2);
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
